package {{$generatedArtifactPackageName}};

{{for importedClass : $importedClasses}}
import {{$importedClass}};
{{end}}

/**
 * Movable object reflection of domain {@link {{$sourceArtifactSimpleName}}}.
 * <p>
 * This class was generated automatically. Don't try to change it.
 */
@Reflection(domainClass = {{$sourceArtifactSimpleName}}.class)
@Movable
{{$generatedAnnotation}}
{{when $isAlias}}
public interface {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsFull}} extends {{$generalReflection}}{{$reflectionTypeParamsBrief}}, {{$baseReflection}} {
{{else}}
public interface {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsFull}} extends {{$generalReflection}}{{$reflectionTypeParamsBrief}}, MovableReflection{{for parent : $parents}}, {{$parent}}{{end}} {
{{end}}

{{for method : $domainMethods}}
  {{$method->javadoc}}
  {{$method->declaration}};

{{end}}
  @Override
  default {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsBrief}} asMovableOrElseThrow() {
    return this;
  }

  @Override
  <Q> {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsBrief}} moveThru(Rid cid, Q qualifier) throws TraverseException;

{{when $isAlias}}
//  @Override
////  {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsBrief}} moveThru(ChannelFunction0<{{$primaryDomainSimpleName}}{{$primaryDomainTypeArguments}}, {{$primaryDomainSimpleName}}{{$primaryDomainTypeArguments}}> channelFunction) throws TraverseException;

//  @Override
//  <Q> {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsBrief}} moveThru(ChannelFunction1<{{$primaryDomainSimpleName}}{{$primaryDomainTypeArguments}}, {{$primaryDomainSimpleName}}{{$primaryDomainTypeArguments}}, Q> channelFunction, Q qualifier) throws TraverseException;
{{else}}
//  @Override
//  {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsBrief}} moveThru(ChannelFunction0<{{$sourceArtifactSimpleName}}{{$domainTypeParamsBrief}}, {{$sourceArtifactSimpleName}}{{$domainTypeParamsBrief}}> channelFunction) throws TraverseException;

//  @Override
//  <Q> {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsBrief}} moveThru(ChannelFunction1<{{$sourceArtifactSimpleName}}{{$domainTypeParamsBrief}}, {{$sourceArtifactSimpleName}}{{$domainTypeParamsBrief}}, Q> channelFunction, Q qualifier) throws TraverseException;
{{end}}

  @Override
  {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsBrief}} moveThru(Class<? extends Channel0> channelClass) throws TraverseException;

  @Override
  <Q> {{$generatedArtifactSimpleName}}{{$reflectionTypeParamsBrief}} moveThru(Class<? extends Channel1> channelClass, Q qualifier) throws TraverseException;

  @Override
  <R, Q> R mapOfMovingThru(Rid cid, Q qualifier) throws TraverseException;

  @Override
  <R> R mapOfMovingThru(Class<? extends Channel0> channelClass) throws TraverseException;

  @Override
  <R, Q, C extends Channel1 & MappingOfMovingTraverse> R mapOfMovingThru(Class<C> channelClass, Q qualifier) throws TraverseException;

{{when $isAlias}}
//  @Override
//  <R> R mapOfMovingThru(ChannelFunction0<{{$primaryDomainSimpleName}}{{$primaryDomainTypeArguments}}, R> channelFunction) throws TraverseException;

//  @Override
//  <R, Q> R mapOfMovingThru(ChannelFunction1<{{$primaryDomainSimpleName}}{{$primaryDomainTypeArguments}}, R, Q> channelFunction, Q qualifier) throws TraverseException;
{{else}}
//  @Override
//  <R> R mapOfMovingThru(ChannelFunction0<{{$sourceArtifactSimpleName}}{{$domainTypeParamsBrief}}, R> channelFunction) throws TraverseException;

//  @Override
//  <R, Q> R mapOfMovingThru(ChannelFunction1<{{$sourceArtifactSimpleName}}{{$domainTypeParamsBrief}}, R, Q> channelFunction, Q qualifier) throws TraverseException;
{{end}}
}
