package {{$generatedArtifactPackageName}};

{{for importedClass : $importedClasses}}
import {{$importedClass}};
{{end}}

/**
 * The assistant of objects of domain  {@link {{$sourceArtifactSimpleName}}}.
 * <p>
 * This class was generated automatically. Don't try to change it.
 */
{{$generatedAnnotation}}
public class {{$generatedArtifactSimpleName}} {

{{when $isDataset}}
  public static {{$datasetBuilderSimpleName}} build() {
    return new {{$datasetBuilderSimpleName}}();
  }
{{end}}

{{for method : $customizerMethods}}
  public static {{$method->signature}} {
    return ({{$method->returnTypeDeclaration}}) $handle.{{$method->name}}({{$method->paramNames}});
  }

{{end}}
  @SuppressWarnings("unchecked")
  public static {{$typeParamsFull}} {{$generalReflectionSimpleName}}{{$typeParamsBrief}} reflection(Object object{{for typeParam : $typeParams}}, Class<{{$typeParam->type}}> {{$typeParam->name}}{{end}}) {
    if (object == null) {
      return null;
    }
    if ({{$generalReflectionSimpleName}}.class.isAssignableFrom(object.getClass())) {
      return ({{$generalReflectionSimpleName}}{{$typeParamsBrief}}) object;
    }
    throw UnexpectedExceptions.withMessage("The object is not a object reflection of the domain {{$sourceArtifactSimpleName}}");
  }

  private {{$generatedArtifactSimpleName}}() {}

{{when $customizerMethods.isNotEmpty()}}
  private static final {{$handleSimpleName}} $handle = new {{$handleSimpleName}}();
{{end}}
}
